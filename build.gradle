buildscript {
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }
}

plugins {
  id 'maven-publish'
  id 'biz.aQute.bnd.builder' version '6.0.0'
  id 'org.jreleaser' version '1.19.0'
}

dependencies {
  compileOnly fileTree(dir: 'src/external', include: ['android*.jar'])
}

group = 'com.fazecast'
archivesBaseName = 'jSerialComm'
version = System.getenv("LIB_VERSION") ?: '2.11.3'
ext.moduleName = 'com.fazecast.jSerialComm'

sourceCompatibility = 6
targetCompatibility = 6

javadoc {
  title archivesBaseName + ' ' + version + ' API'
  options {
    links 'https://docs.oracle.com/en/java/javase/12/docs/api/'
  }
}

sourceSets {
  main {
    java {
      srcDirs = ['src/main/java']
    }
  }
  moduleInfo {
    java {
      srcDirs = ['src/moduleInfo/java']
    }
  }
}

compileModuleInfoJava {
  sourceCompatibility = 9
  targetCompatibility = 9
  inputs.property("moduleName", moduleName)

  doFirst {
    classpath = files()
    options.sourcepath = files(sourceSets.moduleInfo.java.srcDirs)
    options.compilerArgs = [
      '--module-path', classpath.asPath,
      '-d', sourceSets.main.output.classesDirs.asPath
    ]
  }
}

jar {
  from sourceSets.main.output
  from sourceSets.moduleInfo.output

  bnd (
    '-exportcontents': 'com.fazecast.jSerialComm;version="' + archiveVersion.get() + '"',
    'Import-Package': '!android.*',
    'Bundle-Name': 'jSerialComm',
    'Bundle-SymbolicName': 'com.fazecast.jSerialComm',
    'Bundle-Description': 'Java Serial Communications Library',
    'Bundle-Vendor': 'Fazecast, Inc.',
    'Require-Capability': 'osgi.ee;filter:="(&(osgi.ee=JavaSE)(version=1.6))"',
    'Implementation-Title': 'jSerialComm: Java Serial Communications Library',
    'Implementation-Version': archiveVersion.get(),
    'Implementation-Vendor': 'Fazecast, Inc.',
    'Sealed': 'true'
  )
}

tasks.withType(JavaCompile) {
  options.compilerArgs.add('-Xlint:-options')
}

task testJar(type: Jar) {
  archiveClassifier = 'test'
  from sourceSets.test.output, sourceSets.main.output
  
  manifest {
    attributes 'Main-Class': 'com.fazecast.jSerialComm.SerialPortTest', 
               'Implementation-Title': 'jSerialComm: Java Serial Communications Library',
               'Implementation-Version': archiveVersion.get(),
               'Implementation-Vendor': 'Fazecast, Inc.',
               'Sealed': 'true'
  }
}

task javadocJar(type: Jar) {
  archiveClassifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jar, javadocJar, sourcesJar, testJar
}

java {
  withJavadocJar()
  withSourcesJar()
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = group
      artifactId = archivesBaseName
      version = version
      from components.java
      
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      
      pom {
        name = 'jSerialComm'
        description = 'A platform-independent serial communications library for Java.'
        url = 'http://fazecast.github.io/jSerialComm/'
        
        scm {
          connection = 'scm:git:https://github.com/Fazecast/jSerialComm.git'
          developerConnection = 'scm:git:https://github.com/Fazecast/jSerialComm.git'
          url = 'https://github.com/Fazecast/jSerialComm'
        }
        
        licenses {
          license {
            name = 'GNU Lesser GPL, Version 3'
            url = 'http://www.gnu.org/licenses/lgpl.html'
          }
          license {
            name = 'Apache Software License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
          }
        }
        
        developers {
          developer {
            id = 'hedgecrw'
            name = 'Will Hedgecock'
            email = 'will.hedgecock@fazecast.com'
          }
        }
      }
    }
  }
  
  repositories {
    maven {
      url = layout.buildDirectory.dir('staging-deploy')
    }
  }
}

jreleaser {
  signing {
    active = 'ALWAYS'
    armored = true
    verify = false
  }
  environment {
    variables 'gradle.properties'
  }
  deploy {
    maven {
      mavenCentral {
        'release-deploy' {
          active = 'RELEASE'
          url = 'https://central.sonatype.com/api/v1/publisher'
          stagingRepository('build/staging-deploy')
          connectTimeout = 60
          readTimeout = 600
          retryDelay = 600
        }
      }
      nexus2 {
        'snapshot-deploy' {
          active = 'SNAPSHOT'
          snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
          applyMavenCentralRules = true
          snapshotSupported = true
          closeRepository = true
          releaseRepository = true
          stagingRepository('build/staging-deploy')
          connectTimeout = 60
          readTimeout = 600
          transitionDelay = 600
        }
      }
    }
  }
}
